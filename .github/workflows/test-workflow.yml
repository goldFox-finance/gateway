name: Test
on: push

# rustc version set with `rustup default` command in scripts/get_substrate.sh

jobs:
  cargo-format:
    name: Cargo Format Check
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Cargo fmt
        run: |
          rustup install nightly
          rustup component add rustfmt --toolchain nightly
          cargo +nightly fmt -- --check

  substrate-tests:
    name: Substrate Unit Tests
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      # - uses: actions/cache@v2
      #   with:
      #    key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      #    restore-keys: |
      #     ${{ runner.os }}-cargo-
      #    path: |
      #     /usr/local/bin/rustup
      #     ~/.cargo
      #     target

      - name: Test Setup
        run: |
          ./scripts/get_substrate.sh --fast
          cargo install cargo2junit

      - name: Cargo Test
        run: |
          set -eo pipefail
          cargo test -- -Z unstable-options --format json | tee unit-test-results.json
          cat unit-test-results.json | cargo2junit > unit-test-results.xml
          test_url="$(curl -X POST --data-binary @unit-test-results.xml https://test.compound.finance/test)"
          echo "::set-output name=test_url::$test_url"
        id: cargo_test

      - name: Link to Results
        uses: unsplash/comment-on-pr@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          msg: "ðŸ«– [View Test Results](${{steps.cargo_test.outputs.test_url}})"
          check_for_duplicate_msg: false
        continue-on-error: true

      - name: Upload Unit Test Results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: Unit Test Results
          path: unit-test-results.*
        continue-on-error: true

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1.6
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          files: unit-test-results.xml
        continue-on-error: true

  substrate-coverage:
    name: Substrate Coverage
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      # - uses: actions/cache@v2
      #   with:
      #    key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      #    restore-keys: |
      #     ${{ runner.os }}-cargo-
      #    path: |
      #     /usr/local/bin/rustup
      #     ~/.cargo
      #     target

      - name: Test Setup
        run: |
          ./scripts/get_substrate.sh --fast
          sudo apt-get update && sudo apt-get install -y lcov llvm-11
          rustup component add llvm-tools-preview

      - name: Cargo Test
        run: |
          PACKAGES="pallet-cash runtime-interfaces gateway-crypto ethereum-client open-oracle-mock-reporter trx-request"
          for PKG in $PACKAGES; do
              RUSTFLAGS="-Z instrument-coverage" cargo +nightly test -p $PKG --no-run --message-format=json > messages
              EXE=`scripts/list_executables.py < messages`
              $EXE
              llvm-profdata-11 merge -sparse default.profraw -o default.profdata
              llvm-cov-11 export --instr-profile default.profdata $EXE --ignore-filename-regex="/(usr|rustc)/*" --format=lcov > $PKG.lcov.info
          done
          lcov $(printf " -a %q.lcov.info " $PACKAGES) -o lcov.info
        id: cargo_test

      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: lcov.info

  ethereum-tests:
    name: Ethereum Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ethereum

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'

      # - uses: actions/cache@v2
      #   with:
      #     path: '**/node_modules'
      #     key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        run: yarn install

      - name: Install solc
        run: |
          sudo wget https://github.com/ethereum/solidity/releases/download/v0.8.1/solc-static-linux -O /usr/local/bin/solc
          sudo chmod +x /usr/local/bin/solc

      - name: Run tests
        run: yarn test

  ethereum-coverage:
    name: Ethereum Coverage
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ethereum

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'

      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        run: yarn install

      - name: Install solc
        run: |
          sudo wget https://github.com/ethereum/solidity/releases/download/v0.8.1/solc-static-linux -O /usr/local/bin/solc
          sudo chmod +x /usr/local/bin/solc

      - name: Run coverage
        run: yarn coverage

      - uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./ethereum/coverage/coverage-final.json
          flags: solidity
          verbose: true

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'

      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - uses: actions/cache@v2
        with:
         key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
         restore-keys: |
          ${{ runner.os }}-cargo-
         path: |
          /usr/local/bin/rustup
          ~/.cargo
          target

      - name: Substrate setup
        run: |
          ./scripts/get_substrate.sh --fast

      - name: Install yarn ethereum dependencies
        run: cd ethereum && yarn install

      - name: Install integration test ethereum dependencies
        run: cd integration && yarn install

      - name: Install solc
        run: |
          sudo wget https://github.com/ethereum/solidity/releases/download/v0.8.1/solc-static-linux -O /usr/local/bin/solc
          sudo chmod +x /usr/local/bin/solc

      - name: Compile Ethereum contracts
        run: |
          cd ethereum
          yarn compile

      - name: Build Gateway
        run: |
          cargo build

      - name: Run Integration Test
        timeout-minutes: 20
        run: |
          set -eo pipefail
          cd integration
          export QUIET_SCENARIOS=true
          sudo npx jest --ci --reporters=default --reporters=jest-junit

      - name: Prepublish Integration results
        if: always()
        run: |
          test_url="$(curl -X POST --data-binary @integration/junit.xml https://test.compound.finance/test)"
          echo "::set-output name=test_url::$test_url"
        id: int_test
        continue-on-error: true

      - name: Link to Integration Results
        if: always()
        uses: unsplash/comment-on-pr@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          msg: "ðŸ«– [View Integration Test Results](${{steps.int_test.outputs.test_url}})"
          check_for_duplicate_msg: false
        continue-on-error: true

      - name: Upload Integration Test Results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: Integration Test Results
          path: integration/junit.xml
        continue-on-error: true

      - name: Publish Integration Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1.6
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          files: integration/junit.xml
        continue-on-error: true
